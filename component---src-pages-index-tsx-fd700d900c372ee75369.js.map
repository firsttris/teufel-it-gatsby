{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","navigateTo","locale","navigate","withPrefix","aStyle","margin","color","textDecoration","className","style","onClick","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","a","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,GAGMK,EAAa,SAACC,GAClBC,YAASC,YAAU,IAAKF,EAAL,OAGNJ,EAAA,mBAab,IAAMO,EAA8B,CAClCC,OAAQ,OACRC,MAAO,OACPC,eAAgB,QAGlB,OACER,EAAA,yBACEA,EAAA,gDACAA,EAAA,mBAAGS,UAAU,uBAAuBC,MAAOL,EAAQM,QAAS,kBAAMV,EAAW,QAA7E,UAFF,IAMED,EAAA,mBAAGS,UAAU,uBAAuBC,MAAOL,EAAQM,QAAS,kBAAMV,EAAW,QAA7E,kCCjCN,IAAsBW,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAArB,EAAA,GAAAsB,EAAAtB,EAAAuB,EAAAF,GAAAG,EAAAxB,EAAA,GAAAyB,EAAAzB,EAAAuB,EAAAC,GAAAE,EAAA1B,EAAA,IAAA2B,EAAA3B,EAAAuB,EAAAG,GAAA1B,EAAA4B,EAAA1B,EAAA,sBAAAyB,EAAAE,IAAA7B,EAAA4B,EAAA1B,EAAA,sBAAAwB,EAAA,aAAA1B,EAAA4B,EAAA1B,EAAA,sBAAAwB,EAAA,WAAA1B,EAAA,KAa2B8B,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,uGCpDhBC,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEV,IAAMc,cAAcC,IAApBC,OAAAC,OAAA,CACLR,WACAC,iBACGA,EAAcQ,OANV,MAUXX,EAAiBY,UAAY,CAC3BV,SAAUP,IAAUkB,MAAM,CACxBP,SAAUX,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-pages-index-tsx-fd700d900c372ee75369.js","sourcesContent":["import { navigate, withPrefix } from 'gatsby';\nimport * as React from 'react';\n\nconst navigateTo = (locale: string) => {\n  navigate(withPrefix(`/${locale}/`));\n};\n\nexport default (): any => {\n  /*\n  if (typeof location !== 'undefined') {\n    const homeUrl = withPrefix(`/${navigator.language.split('-')[0]}/`);\n    location.replace(homeUrl);\n  }\n  \n  return (\n    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\n      <div className=\"fas fa-5x fa-spinner fa-spin\" style={{ color: 'Red', margin: 'auto 0' }} />\n    </div>\n  );\n  */\n  const aStyle: React.CSSProperties = {\n    margin: '10px',\n    color: '#f00',\n    textDecoration: 'none'\n  };\n\n  return (\n    <div>\n      <h1>choose your language</h1>\n      <a className=\"btn btn-outline-dark\" style={aStyle} onClick={() => navigateTo('de')}>\n        German\n      </a>\n      |\n      <a className=\"btn btn-outline-dark\" style={aStyle} onClick={() => navigateTo('en')}>\n        English\n      </a>\n    </div>\n  );\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}