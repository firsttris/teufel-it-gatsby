{"version":3,"sources":["webpack:///./src/components/GithubItem.tsx","webpack:///./src/components/Github.tsx","webpack:///./src/templates/Github.tsx","webpack:///./src/assets/images/code.jpg"],"names":["smallStyle","float","width","textAlign","GithubItem","props","react","href","repo","html_url","target","rel","className","name","style","stargazers_count","forks_count","dangerouslySetInnerHTML","__html","toImage","description","language","Lines","require","OldComputer","containerStyle","backgroundImage","Github","_React$Component","_this","call","this","onEnter","e","key","document","activeElement","blur","search","event","repos","filter","toLowerCase","includes","value","setState","filteredRepositories","searchInput","reset","state","inheritsLoose_default","prototype","render","FullImage","image","height","Header","locale","SectionHeaderWithSubRow","title","text","type","id","placeholder","onChange","onKeyPress","onClick","cursor","aria-hidden","map","repository","index","GithubItem_GithubItem","Contact","Impressum","React","__webpack_exports__","Layout","location","pageContext","Github_Github","data","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-templates-github-tsx-94b0f69f73be1d93d6ad.js","sourcesContent":["import { toImage } from 'emojione';\nimport * as React from 'react';\n\nconst smallStyle: React.CSSProperties = { float: 'right', width: '100px', textAlign: 'right' };\n\ninterface Props {\n  repo: any;\n}\n\nexport const GithubItem = (props: Props) => (\n  <div>\n    <a\n      href={props.repo.html_url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"list-group-item list-group-item-action flex-column align-items-start\"\n    >\n      <div className=\"d-flex w-100 justify-content-between\">\n        <h5 className=\"mb-1\">{props.repo.name}</h5>\n      </div>\n      <small style={smallStyle}>\n        <i className=\"fas fa-star mx-1\" />\n        <span className=\"pr-2\">{props.repo.stargazers_count}</span>\n        <i className=\"fas fa-code-branch mx-1\" />\n        <span>{props.repo.forks_count}</span>\n      </small>\n      <div className=\"mb-1\" dangerouslySetInnerHTML={{ __html: toImage(props.repo.description || '') }} />\n      <small>{props.repo.language}</small>\n    </a>\n  </div>\n);\n","import * as React from 'react';\nimport { Contact } from './Contact';\nimport { FullImage } from './FullImage';\nimport { GithubItem } from './GithubItem';\nimport { Header } from './Header';\nimport { Impressum } from './Impressum';\nimport { SectionHeaderWithSubRow } from './SectionHeaderWithSubRow';\n\nconst Lines = require('./../assets/images/backgrounds/lines.png');\nconst OldComputer = require('./../assets/images/code.jpg');\n\nconst containerStyle: React.CSSProperties = { backgroundImage: `url(${Lines})` };\n\ninterface Props {\n  locale: string;\n  repos: any;\n}\n\ninterface State {\n  searchInput: string;\n  filteredRepositories: any[];\n}\n\nexport class Github extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      searchInput: '',\n      filteredRepositories: this.props.repos\n    };\n  }\n\n  onEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      document.activeElement.blur();\n    }\n  };\n\n  search = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const repos = this.props.repos.filter((repo: any) =>\n      repo.name.toLowerCase().includes(event.target.value.toLowerCase())\n    );\n    this.setState({ filteredRepositories: repos, searchInput: event.target.value });\n  };\n\n  reset = () => {\n    this.setState({ searchInput: '', filteredRepositories: this.props.repos });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={containerStyle}>\n        <div className=\"text-center\">\n          <FullImage image={OldComputer} height=\"550px\" />\n          <Header locale={this.props.locale} />\n        </div>\n        <div className=\"container\">\n          <SectionHeaderWithSubRow title=\"NAVIGATION_PROJECTS\" text=\"GITHUB_SUBTITLE\" locale={this.props.locale} />\n          <div className=\"form-group pt-3\">\n            <div className=\"input-group\">\n              <input\n                type=\"search\"\n                className=\"form-control\"\n                id=\"Search\"\n                placeholder=\"Search\"\n                value={this.state.searchInput}\n                onChange={this.search}\n                onKeyPress={this.onEnter}\n              />\n              <div className=\"input-group-prepend\" onClick={this.reset} style={{ cursor: 'pointer' }}>\n                <div className=\"input-group-text\">\n                  <i className=\"fas fa-trash-alt\" aria-hidden=\"true\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"list-group pb-3\">\n            {this.state.filteredRepositories.map((repository, index) => (\n              <GithubItem key={index} repo={repository} />\n            ))}\n          </div>\n        </div>\n        <Contact locale={this.props.locale} />\n        <Impressum locale={this.props.locale} />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Github } from './../components/Github';\nimport { Layout } from './../layouts/Layout';\n\ninterface Props {\n  location: Location;\n  pageContext: {\n    data: any;\n    locale: string;\n  };\n}\n\nexport default (props: Props) => (\n  <Layout location={props.location} locale={props.pageContext.locale}>\n    <Github locale={props.pageContext.locale} repos={props.pageContext.data} />\n  </Layout>\n);\n","module.exports = __webpack_public_path__ + \"static/code-4b6f63c5db12ab7c2df54cf57ddb80ae.jpg\";"],"sourceRoot":""}